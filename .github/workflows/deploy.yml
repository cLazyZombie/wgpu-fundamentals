name: Build and Deploy mdbook with WebAssembly

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build WebAssembly
      run: |
        examples/build.sh

    # - name: Setup Node.js (if needed for additional processing)
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'

    - name: Install mdbook
      uses: peaceiris/actions-mdbook@v2
      with:
        mdbook-version: 'latest'

    - name: Install mdbook plugins (optional)
      run: |
        # 필요한 경우 플러그인 설치 (예시)
        # cargo install mdbook-mermaid --version "^0.12"
        # cargo install mdbook-katex --version "^0.5"
        echo "Add mdbook plugins installation if needed"

    - name: Build mdbook
      run: mdbook build

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./book

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
